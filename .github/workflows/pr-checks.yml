name: PR Checks

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

env:
  NODE_VERSION: '24'

jobs:
  # Lint and type checking
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --force
        
      - name: Run linter
        run: npm run lint
        
      - name: Run type check
        run: npm run lint:types

  # Unit tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --force
        
      - name: Run unit tests
        run: npm run test:cov
        
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage
          fail_ci_if_error: false

  # E2E tests
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests]
    timeout-minutes: 45
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Install dependencies
        run: npm ci --force
        
      - name: Pre-pull Docker images
        run: |
          echo "Pre-pulling Docker images for faster startup..."
          docker pull pgvector/pgvector:pg16 &
          docker pull redis:7-alpine &
          docker pull minio/minio:latest &
          docker pull rabbitmq:3.13-management &
          wait
          
      - name: Run E2E tests
        run: npm run test:e2e
        env:
          NODE_ENV: test
          CI: true
          TESTCONTAINERS_RYUK_DISABLED: true
          TESTCONTAINERS_CHECKS_DISABLE: true
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            coverage/
            test-results.xml
          retention-days: 7
          
      - name: Cleanup Docker resources
        if: always()
        run: |
          docker system prune -af
          docker volume prune -f

  # Build verification
  build:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [e2e-tests]
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --force
        
      - name: Build application
        run: npm run build